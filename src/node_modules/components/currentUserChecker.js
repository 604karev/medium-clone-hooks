import React, {useEffect, useContext} from 'react'
import useFetch from 'hooks/useFetch'
import {CurrentUserContext} from 'contexts/currentUser'
import useLocalStorage from 'hooks/useLocalStorage'

const CurrentUserChecker = ({children}) => {
    const [{response}, doFetch] = useFetch('/user');
    const [, setUserState] = useContext(CurrentUserContext);
    const [token] = useLocalStorage('token');

    useEffect(() => {
        if (!token) {
            setUserState(state => ({
                ...state,
                isLoggedIn: false
            }));
            return
        }
        doFetch();
        setUserState(state => ({
                ...state,
                isLoading: true
            })
        );
    }, []);

    useEffect(() => {
        if (!response) {
            return
        }
        setUserState(state => ({
            ...state,
            isLoading: false,
            isLoggedIn: true,
            currentUser: response.user
        }))
    }, [response, setUserState]);

    return children;
};
export default CurrentUserChecker